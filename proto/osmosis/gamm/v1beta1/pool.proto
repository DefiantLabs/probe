syntax = "proto3";
package osmosis.gamm.v1beta1;

import "gogoproto/gogo.proto";

import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";

import "cosmos/base/v1beta1/coin.proto";
option go_package = "github.com/DefiantLabs/probe/client/codec/osmosis/v15/x/gamm/types";

message PoolAsset {
    // Coins we are talking about,
    // the denomination must be unique amongst all PoolAssets for this pool.
    cosmos.base.v1beta1.Coin token = 1
        [ (gogoproto.moretags) = "yaml:\"token\"", (gogoproto.nullable) = false ];
    // Weight that is not normalized. This weight must be less than 2^50
    string weight = 2 [
      (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
      (gogoproto.moretags) = "yaml:\"weight\"",
      (gogoproto.nullable) = false
    ];
  
    // Weight that is normalized s.t. the sum of all pool assets' weights
    // equals 1. If the user provides this value, it is ignored. This should only
    // ever be set by the state machine. This is left as a TODO for a future PR.
    // string normalizedWeight = 3 [
    //  (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    //  (gogoproto.moretags) = "yaml:\"normalized_weight\"",
    //  (gogoproto.nullable) = true
    // ];
  }

message SmoothWeightChangeParams {
    // The start time for beginning the weight change.
    // If a parameter change / pool instantiation leaves this blank,
    // it should be generated by the state_machine as the current time.
    google.protobuf.Timestamp start_time = 1 [
      (gogoproto.stdtime) = true,
      (gogoproto.nullable) = false,
      (gogoproto.moretags) = "yaml:\"start_time\""
    ];
    // Duration for the weights to change over
    google.protobuf.Duration duration = 2 [
      (gogoproto.nullable) = false,
      (gogoproto.stdduration) = true,
      (gogoproto.jsontag) = "duration,omitempty",
      (gogoproto.moretags) = "yaml:\"duration\""
    ];
    // The initial pool weights. These are copied from the pool's settings
    // at the time of weight change instantiation.
    // The amount PoolAsset.token.amount field is ignored if present,
    // future type refactorings should just have a type with the denom & weight
    // here.
    repeated PoolAsset initialPoolWeights = 3 [
      (gogoproto.moretags) = "yaml:\"initial_pool_weights\"",
      (gogoproto.nullable) = false
    ];
    // The target pool weights. The pool weights will change linearly with respect
    // to time between start_time, and start_time + duration. The amount
    // PoolAsset.token.amount field is ignored if present, future type
    // refactorings should just have a type with the denom & weight here.
    repeated PoolAsset targetPoolWeights = 4 [
      (gogoproto.moretags) = "yaml:\"target_pool_weights\"",
      (gogoproto.nullable) = false
    ];
    // Intermediate variable for the 'slope' of pool weights. This is equal to
    // (target_pool_weights - initial_pool_weights) / (duration)
    // TODO: Work out precision, and decide if this is good to add
    // repeated PoolAsset poolWeightSlope = 5 [
    //  (gogoproto.moretags) = "yaml:\"pool_weight_slope\"",
    //  (gogoproto.nullable) = false
    // ];
  }
  
  // PoolParams defined the parameters that will be managed by the pool governance
  // in the future. This params are not managed by the chain governanace.
  // Instead they will be managed by the token holders of the pool.
  // The pool's token holders are specified in future_pool_governor.
  message PoolParams {
    string swapFee = 1 [
      (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
      (gogoproto.moretags) = "yaml:\"swap_fee\"",
      (gogoproto.nullable) = false
    ];
    string exitFee = 2 [
      (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
      (gogoproto.moretags) = "yaml:\"exit_fee\"",
      (gogoproto.nullable) = false
    ];
    //
    SmoothWeightChangeParams smoothWeightChangeParams = 3 [
      (gogoproto.moretags) = "yaml:\"smooth_weight_change_params\"",
      (gogoproto.nullable) = true
    ];
  }